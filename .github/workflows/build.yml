# .github/workflows/build.yml

name: CI – Build, Scan & Promote Multi-arch Image

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/weather-app-zad2
  CACHE_IMAGE: godefrey/weather-app-buildcache   # ← use your Docker Hub username "godefrey"

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build:
    name: Build & Push “cibuild-${{ github.sha }}” to GHCR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up QEMU for cross-building
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v3
        id: buildx

      - name: Log in to Docker Hub (for cache)
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Log in to GHCR (to push the image)
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push “cibuild-${{ github.sha }}” (multi-arch) and export cache
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/weather-app-zad2:cibuild-${{ github.sha }}
          cache-from: |
            type=registry,ref=${{ env.CACHE_IMAGE }}:cache
          cache-to: |
            type=registry,ref=${{ env.CACHE_IMAGE }}:cache,mode=max
          builder: ${{ steps.buildx.outputs.name }}

  scan:
    name: Scan “cibuild-${{ github.sha }}” for CVEs
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@0.22.0
        with:
          image-ref: ${{ env.IMAGE_NAME }}:cibuild-${{ github.sha }}
          scan-type: image
          format: table
          vuln-type: os,library
          severity: CRITICAL,HIGH
          ignore-unfixed: true

  promote:
    name: Retag & Push “latest” and “${{ github.sha }}”
    runs-on: ubuntu-latest
    needs: scan
    if: ${{ success() }}
    steps:
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull the scanned image “cibuild-${{ github.sha }}”
        run: |
          docker pull ${{ env.IMAGE_NAME }}:cibuild-${{ github.sha }}

      - name: Retag as “latest” and “${{ github.sha }}”
        run: |
          docker tag ${{ env.IMAGE_NAME }}:cibuild-${{ github.sha }} ${{ env.IMAGE_NAME }}:latest
          docker tag ${{ env.IMAGE_NAME }}:cibuild-${{ github.sha }} ${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Push “latest” and “${{ github.sha }}”
        run: |
          docker push ${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.IMAGE_NAME }}:${{ github.sha }}
