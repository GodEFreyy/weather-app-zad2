name: CI â€“ Build & Push Multi-arch Image

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/weather-app
  CACHE_IMAGE: godefrey/weather-app-buildcache   # your DockerHub username

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU (for cross-building)
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v3
        id: buildx

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Log in to GHCR (GitHub Container Registry)
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and PUSH the temp tag so Trivy can pull it
      - name: Build & Push (temporary tag for scanning)
        id: build
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true      # push temporary tag!
          tags: |
            ${{ env.IMAGE_NAME }}:cibuild-${{ github.sha }}
          cache-from: |
            type=registry,ref=${{ env.CACHE_IMAGE }}:cache
          cache-to: |
            type=registry,ref=${{ env.CACHE_IMAGE }}:cache,mode=max
          builder: ${{ steps.buildx.outputs.name }}

      # Trivy will pull the pushed cibuild tag and scan it
      - name: Scan image for CVEs (Trivy)
        uses: aquasecurity/trivy-action@0.22.0
        with:
          image-ref: ${{ env.IMAGE_NAME }}:cibuild-${{ github.sha }}
          scan-type: image
          format: 'table'
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true

      # Only if Trivy passes, push real tags
      - name: Push final image to GHCR
        if: success()
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: |
            type=registry,ref=${{ env.CACHE_IMAGE }}:cache
          cache-to: |
            type=registry,ref=${{ env.CACHE_IMAGE }}:cache,mode=max
          builder: ${{ steps.buildx.outputs.name }}
